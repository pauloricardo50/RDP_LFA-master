
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALMENORMAIORMENORIGUALMAIORIGUALleftPLUSMINUSleftDIVIDEINTQUOTIENTleftMULTIPLYDIVIDEleftEXPONENTleftLPARRPARleftLCHAVESRCHAVESCOMMA DEF DIVIDE DIVIDEINT ENDLINE EQUALS EXPONENT IF IGUAL LCHAVES LPAR MAIOR MAIORIGUAL MENOR MENORIGUAL MINUS MULTIPLY NAME NUMBER PLUS QUOTIENT RCHAVES RPAR WHILE\n    contexto    : deffuncao\n                | bloco\n    \n    bloco   : funcao\n            | if\n            | while\n            | var_assign\n            | expression\n    \n    funcao  : NAME LPAR values RPAR\n    \n    values  : NAME COMMA values\n    \n    values  : NUMBER COMMA values\n    \n    values  : NUMBER\n    \n    values  : NAME\n    \n    deffuncao   : DEF NAME LPAR args RPAR LCHAVES bloco RCHAVES\n    \n    args    : NAME COMMA args\n    \n    args :   NAME\n    \n    expression  : term\n                | empty\n    \n    if  : IF LPAR bloco RPAR LCHAVES bloco RCHAVES\n    \n    while   : WHILE LPAR bloco RPAR LCHAVES bloco RCHAVES\n    \n    var_assign  : NAME EQUALS term\n                | NAME EQUALS funcao\n    \n    term    : term EXPONENT term\n            | term MULTIPLY term\n            | term DIVIDE term\n            | term DIVIDEINT term\n            | term QUOTIENT term\n            | term MINUS term\n            | term PLUS term\n            | term IGUAL term\n            | term MENOR term\n            | term MAIOR term\n            | term MENORIGUAL term\n            | term MAIORIGUAL term\n    \n    term    : factor\n    \n    factor  : nterm\n            | NUMBER\n            | positive\n            | negative\n    \n    negative    : MINUS term\n    \n    positive    : PLUS term\n    \n    nterm : LPAR term RPAR\n    \n    term    : NAME\n    \n    empty   :\n    '
    
_lr_action_items = {'DEF':([0,],[4,]),'NAME':([0,4,6,16,17,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,68,70,73,77,78,80,],[5,23,27,27,27,45,48,5,5,27,27,27,27,27,27,27,27,27,27,27,27,66,45,45,66,5,5,5,]),'IF':([0,28,29,77,78,80,],[12,12,12,12,12,12,]),'WHILE':([0,28,29,77,78,80,],[13,13,13,13,13,13,]),'$end':([0,1,2,3,5,7,8,9,10,11,14,15,18,19,20,21,22,27,42,43,48,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,69,84,85,86,],[-43,0,-1,-2,-42,-3,-4,-5,-6,-7,-16,-17,-34,-35,-36,-37,-38,-42,-39,-40,-42,-20,-21,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-8,-18,-19,-13,]),'NUMBER':([0,6,16,17,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,68,70,77,78,80,],[20,20,20,20,47,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,47,47,20,20,20,]),'LPAR':([0,5,6,12,13,16,17,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,77,78,80,],[6,24,6,28,29,6,6,44,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,24,6,6,6,]),'PLUS':([0,5,6,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,77,78,80,],[17,-42,17,36,17,17,-34,-35,-36,-37,-38,17,36,-42,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-39,-40,-42,36,-41,-22,-23,-24,-25,-26,-27,-28,36,36,36,36,36,17,17,17,]),'MINUS':([0,5,6,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,77,78,80,],[16,-42,16,35,16,16,-34,-35,-36,-37,-38,16,35,-42,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-39,-40,-42,35,-41,-22,-23,-24,-25,-26,-27,-28,35,35,35,35,35,16,16,16,]),'EQUALS':([5,],[25,]),'EXPONENT':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,30,-34,-35,-36,-37,-38,30,-42,30,30,-42,30,-41,-22,30,30,30,30,30,30,30,30,30,30,30,]),'MULTIPLY':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,31,-34,-35,-36,-37,-38,31,-42,31,31,-42,31,-41,-22,-23,-24,31,31,31,31,31,31,31,31,31,]),'DIVIDE':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,32,-34,-35,-36,-37,-38,32,-42,32,32,-42,32,-41,-22,-23,-24,32,32,32,32,32,32,32,32,32,]),'DIVIDEINT':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,33,-34,-35,-36,-37,-38,33,-42,33,33,-42,33,-41,-22,-23,-24,-25,-26,33,33,33,33,33,33,33,]),'QUOTIENT':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,34,-34,-35,-36,-37,-38,34,-42,34,34,-42,34,-41,-22,-23,-24,-25,-26,34,34,34,34,34,34,34,]),'IGUAL':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,37,-34,-35,-36,-37,-38,37,-42,-39,-40,-42,37,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,]),'MENOR':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,38,-34,-35,-36,-37,-38,38,-42,-39,-40,-42,38,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,]),'MAIOR':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,39,-34,-35,-36,-37,-38,39,-42,-39,-40,-42,39,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,]),'MENORIGUAL':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,40,-34,-35,-36,-37,-38,40,-42,-39,-40,-42,40,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,]),'MAIORIGUAL':([5,14,18,19,20,21,22,26,27,42,43,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,],[-42,41,-34,-35,-36,-37,-38,41,-42,-39,-40,-42,41,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,]),'RPAR':([5,7,8,9,10,11,14,15,18,19,20,21,22,26,27,28,29,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,75,76,79,84,85,],[-42,-3,-4,-5,-6,-7,-16,-17,-34,-35,-36,-37,-38,51,-42,-43,-43,-39,-40,-12,69,-11,-42,-20,-21,-41,71,72,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-15,74,-8,-9,-10,-14,-18,-19,]),'RCHAVES':([5,7,8,9,10,11,14,15,18,19,20,21,22,27,42,43,48,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,69,77,78,80,81,82,83,84,85,],[-42,-3,-4,-5,-6,-7,-16,-17,-34,-35,-36,-37,-38,-42,-39,-40,-42,-20,-21,-41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-8,-43,-43,-43,84,85,86,-18,-19,]),'COMMA':([45,47,66,],[68,70,73,]),'LCHAVES':([71,72,74,],[77,78,80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'contexto':([0,],[1,]),'deffuncao':([0,],[2,]),'bloco':([0,28,29,77,78,80,],[3,52,53,81,82,83,]),'funcao':([0,25,28,29,77,78,80,],[7,50,7,7,7,7,7,]),'if':([0,28,29,77,78,80,],[8,8,8,8,8,8,]),'while':([0,28,29,77,78,80,],[9,9,9,9,9,9,]),'var_assign':([0,28,29,77,78,80,],[10,10,10,10,10,10,]),'expression':([0,28,29,77,78,80,],[11,11,11,11,11,11,]),'term':([0,6,16,17,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,80,],[14,26,42,43,49,14,14,54,55,56,57,58,59,60,61,62,63,64,65,14,14,14,]),'empty':([0,28,29,77,78,80,],[15,15,15,15,15,15,]),'factor':([0,6,16,17,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,80,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'nterm':([0,6,16,17,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,80,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'positive':([0,6,16,17,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,80,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'negative':([0,6,16,17,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,80,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'values':([24,68,70,],[46,75,76,]),'args':([44,73,],[67,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> contexto","S'",1,None,None,None),
  ('contexto -> deffuncao','contexto',1,'p_contexto','PARSER.PY',120),
  ('contexto -> bloco','contexto',1,'p_contexto','PARSER.PY',121),
  ('bloco -> funcao','bloco',1,'p_bloco','PARSER.PY',127),
  ('bloco -> if','bloco',1,'p_bloco','PARSER.PY',128),
  ('bloco -> while','bloco',1,'p_bloco','PARSER.PY',129),
  ('bloco -> var_assign','bloco',1,'p_bloco','PARSER.PY',130),
  ('bloco -> expression','bloco',1,'p_bloco','PARSER.PY',131),
  ('funcao -> NAME LPAR values RPAR','funcao',4,'p_funcao','PARSER.PY',137),
  ('values -> NAME COMMA values','values',3,'p_values_value_name','PARSER.PY',144),
  ('values -> NUMBER COMMA values','values',3,'p_values_value_number','PARSER.PY',150),
  ('values -> NUMBER','values',1,'p_values_number','PARSER.PY',156),
  ('values -> NAME','values',1,'p_values_name','PARSER.PY',162),
  ('deffuncao -> DEF NAME LPAR args RPAR LCHAVES bloco RCHAVES','deffuncao',8,'p_deffuncao','PARSER.PY',170),
  ('args -> NAME COMMA args','args',3,'p_args','PARSER.PY',177),
  ('args -> NAME','args',1,'p_args_arg','PARSER.PY',183),
  ('expression -> term','expression',1,'p_expression','PARSER.PY',190),
  ('expression -> empty','expression',1,'p_expression','PARSER.PY',191),
  ('if -> IF LPAR bloco RPAR LCHAVES bloco RCHAVES','if',7,'p_if','PARSER.PY',199),
  ('while -> WHILE LPAR bloco RPAR LCHAVES bloco RCHAVES','while',7,'p_while','PARSER.PY',206),
  ('var_assign -> NAME EQUALS term','var_assign',3,'p_var_assign','PARSER.PY',220),
  ('var_assign -> NAME EQUALS funcao','var_assign',3,'p_var_assign','PARSER.PY',221),
  ('term -> term EXPONENT term','term',3,'p_term','PARSER.PY',228),
  ('term -> term MULTIPLY term','term',3,'p_term','PARSER.PY',229),
  ('term -> term DIVIDE term','term',3,'p_term','PARSER.PY',230),
  ('term -> term DIVIDEINT term','term',3,'p_term','PARSER.PY',231),
  ('term -> term QUOTIENT term','term',3,'p_term','PARSER.PY',232),
  ('term -> term MINUS term','term',3,'p_term','PARSER.PY',233),
  ('term -> term PLUS term','term',3,'p_term','PARSER.PY',234),
  ('term -> term IGUAL term','term',3,'p_term','PARSER.PY',235),
  ('term -> term MENOR term','term',3,'p_term','PARSER.PY',236),
  ('term -> term MAIOR term','term',3,'p_term','PARSER.PY',237),
  ('term -> term MENORIGUAL term','term',3,'p_term','PARSER.PY',238),
  ('term -> term MAIORIGUAL term','term',3,'p_term','PARSER.PY',239),
  ('term -> factor','term',1,'p_term_factor','PARSER.PY',246),
  ('factor -> nterm','factor',1,'p_factor','PARSER.PY',253),
  ('factor -> NUMBER','factor',1,'p_factor','PARSER.PY',254),
  ('factor -> positive','factor',1,'p_factor','PARSER.PY',255),
  ('factor -> negative','factor',1,'p_factor','PARSER.PY',256),
  ('negative -> MINUS term','negative',2,'p_negative','PARSER.PY',263),
  ('positive -> PLUS term','positive',2,'p_positive','PARSER.PY',269),
  ('nterm -> LPAR term RPAR','nterm',3,'p_nterm','PARSER.PY',276),
  ('term -> NAME','term',1,'p_term_var','PARSER.PY',283),
  ('empty -> <empty>','empty',0,'p_empty','PARSER.PY',292),
]
