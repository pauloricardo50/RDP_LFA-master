
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftDIVIDEINTQUOTIENTleftMULTIPLYDIVIDEleftEXPONENTleftLPARRPARleftLCHAVESRCHAVESCOMMA DEF DIVIDE DIVIDEINT ENDLINE EQUALS EXPONENT LCHAVES LPAR MINUS MULTIPLY NAME NUMBER PLUS QUOTIENT RCHAVES RPAR\n    contexto    : deffuncao\n                | funcao\n                | expression\n    \n    funcao  : NAME LPAR values RPAR\n    \n    values  : NUMBER\n            | NAME\n    \n    values  : NAME COMMA values\n    \n    deffuncao   : DEF NAME LPAR args RPAR bloco\n    \n    args    : NAME COMMA args\n    \n    args :   NAME\n    \n    expression  : term\n                | var_assign\n                | empty\n    \n    bloco   : LCHAVES expression RCHAVES\n    \n    var_assign  : NAME EQUALS term\n    \n    term    : term EXPONENT term\n            | term MULTIPLY term\n            | term DIVIDE term\n            | term DIVIDEINT term\n            | term QUOTIENT term\n            | term MINUS term\n            | term PLUS term\n    \n    term    : factor\n    \n    factor  : nterm\n            | NUMBER\n            | positive\n            | negative\n    \n    negative    : MINUS term\n    \n    positive    : PLUS term\n    \n    nterm : LPAR term RPAR\n    \n    term    : NAME\n    \n    empty   :\n    '
    
_lr_action_items = {'DEF':([0,],[5,]),'NAME':([0,5,7,11,12,19,20,23,24,25,26,27,28,29,32,47,49,54,],[6,18,22,22,22,33,22,22,22,22,22,22,22,22,45,33,45,56,]),'$end':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,22,30,31,36,37,38,39,40,41,42,43,44,48,53,57,],[-32,0,-1,-2,-3,-31,-11,-12,-13,-23,-24,-25,-26,-27,-31,-28,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,-4,-8,-14,]),'NUMBER':([0,7,11,12,19,20,23,24,25,26,27,28,29,47,54,],[15,15,15,15,35,15,15,15,15,15,15,15,15,35,15,]),'LPAR':([0,6,7,11,12,18,20,23,24,25,26,27,28,29,54,],[7,19,7,7,7,32,7,7,7,7,7,7,7,7,7,]),'PLUS':([0,6,7,8,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,54,56,],[12,-31,12,29,12,12,-23,-24,-25,-26,-27,12,29,-31,12,12,12,12,12,12,12,-28,-29,29,-30,-16,-17,-18,-19,-20,-21,-22,12,-31,]),'MINUS':([0,6,7,8,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,54,56,],[11,-31,11,28,11,11,-23,-24,-25,-26,-27,11,28,-31,11,11,11,11,11,11,11,-28,-29,28,-30,-16,-17,-18,-19,-20,-21,-22,11,-31,]),'EXPONENT':([6,8,13,14,15,16,17,21,22,30,31,36,37,38,39,40,41,42,43,44,56,],[-31,23,-23,-24,-25,-26,-27,23,-31,23,23,23,-30,-16,23,23,23,23,23,23,-31,]),'MULTIPLY':([6,8,13,14,15,16,17,21,22,30,31,36,37,38,39,40,41,42,43,44,56,],[-31,24,-23,-24,-25,-26,-27,24,-31,24,24,24,-30,-16,-17,-18,24,24,24,24,-31,]),'DIVIDE':([6,8,13,14,15,16,17,21,22,30,31,36,37,38,39,40,41,42,43,44,56,],[-31,25,-23,-24,-25,-26,-27,25,-31,25,25,25,-30,-16,-17,-18,25,25,25,25,-31,]),'DIVIDEINT':([6,8,13,14,15,16,17,21,22,30,31,36,37,38,39,40,41,42,43,44,56,],[-31,26,-23,-24,-25,-26,-27,26,-31,26,26,26,-30,-16,-17,-18,-19,-20,26,26,-31,]),'QUOTIENT':([6,8,13,14,15,16,17,21,22,30,31,36,37,38,39,40,41,42,43,44,56,],[-31,27,-23,-24,-25,-26,-27,27,-31,27,27,27,-30,-16,-17,-18,-19,-20,27,27,-31,]),'EQUALS':([6,56,],[20,20,]),'RCHAVES':([8,9,10,13,14,15,16,17,22,30,31,36,37,38,39,40,41,42,43,44,54,55,56,],[-11,-12,-13,-23,-24,-25,-26,-27,-31,-28,-29,-15,-30,-16,-17,-18,-19,-20,-21,-22,-32,57,-31,]),'RPAR':([13,14,15,16,17,21,22,30,31,33,34,35,37,38,39,40,41,42,43,44,45,46,51,52,],[-23,-24,-25,-26,-27,37,-31,-28,-29,-6,48,-5,-30,-16,-17,-18,-19,-20,-21,-22,-10,50,-7,-9,]),'COMMA':([33,45,],[47,49,]),'LCHAVES':([50,],[54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'contexto':([0,],[1,]),'deffuncao':([0,],[2,]),'funcao':([0,],[3,]),'expression':([0,54,],[4,55,]),'term':([0,7,11,12,20,23,24,25,26,27,28,29,54,],[8,21,30,31,36,38,39,40,41,42,43,44,8,]),'var_assign':([0,54,],[9,9,]),'empty':([0,54,],[10,10,]),'factor':([0,7,11,12,20,23,24,25,26,27,28,29,54,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'nterm':([0,7,11,12,20,23,24,25,26,27,28,29,54,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'positive':([0,7,11,12,20,23,24,25,26,27,28,29,54,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'negative':([0,7,11,12,20,23,24,25,26,27,28,29,54,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'values':([19,47,],[34,51,]),'args':([32,49,],[46,52,]),'bloco':([50,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> contexto","S'",1,None,None,None),
  ('contexto -> deffuncao','contexto',1,'p_contexto','parser.py',96),
  ('contexto -> funcao','contexto',1,'p_contexto','parser.py',97),
  ('contexto -> expression','contexto',1,'p_contexto','parser.py',98),
  ('funcao -> NAME LPAR values RPAR','funcao',4,'p_funcao','parser.py',105),
  ('values -> NUMBER','values',1,'p_values','parser.py',112),
  ('values -> NAME','values',1,'p_values','parser.py',113),
  ('values -> NAME COMMA values','values',3,'p_value','parser.py',120),
  ('deffuncao -> DEF NAME LPAR args RPAR bloco','deffuncao',6,'p_deffuncao','parser.py',126),
  ('args -> NAME COMMA args','args',3,'p_args','parser.py',133),
  ('args -> NAME','args',1,'p_args_arg','parser.py',139),
  ('expression -> term','expression',1,'p_expression','parser.py',146),
  ('expression -> var_assign','expression',1,'p_expression','parser.py',147),
  ('expression -> empty','expression',1,'p_expression','parser.py',148),
  ('bloco -> LCHAVES expression RCHAVES','bloco',3,'p_bloco','parser.py',155),
  ('var_assign -> NAME EQUALS term','var_assign',3,'p_var_assign','parser.py',169),
  ('term -> term EXPONENT term','term',3,'p_term','parser.py',176),
  ('term -> term MULTIPLY term','term',3,'p_term','parser.py',177),
  ('term -> term DIVIDE term','term',3,'p_term','parser.py',178),
  ('term -> term DIVIDEINT term','term',3,'p_term','parser.py',179),
  ('term -> term QUOTIENT term','term',3,'p_term','parser.py',180),
  ('term -> term MINUS term','term',3,'p_term','parser.py',181),
  ('term -> term PLUS term','term',3,'p_term','parser.py',182),
  ('term -> factor','term',1,'p_term_factor','parser.py',189),
  ('factor -> nterm','factor',1,'p_factor','parser.py',196),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',197),
  ('factor -> positive','factor',1,'p_factor','parser.py',198),
  ('factor -> negative','factor',1,'p_factor','parser.py',199),
  ('negative -> MINUS term','negative',2,'p_negative','parser.py',206),
  ('positive -> PLUS term','positive',2,'p_positive','parser.py',212),
  ('nterm -> LPAR term RPAR','nterm',3,'p_nterm','parser.py',219),
  ('term -> NAME','term',1,'p_term_var','parser.py',226),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',235),
]
